// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Server.Migrations
{
    [DbContext(typeof(GradjevinskiPContext))]
    partial class GradjevinskiPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Model.Inzenjeri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Licenca")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Inzenjeri");
                });

            modelBuilder.Entity("Model.Masine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CenaGoriva")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Potrosnja")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjekatID");

                    b.ToTable("Masine");
                });

            modelBuilder.Entity("Model.Materijal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Klasa")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Materijali");
                });

            modelBuilder.Entity("Model.ProjekatInzenjer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Dnevnica")
                        .HasColumnType("int");

                    b.Property<int?>("InzenjerID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InzenjerID");

                    b.HasIndex("ProjekatID");

                    b.ToTable("ProjekatInzenjer");
                });

            modelBuilder.Entity("Model.ProjekatMaterijal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("MaterijalID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MaterijalID");

                    b.HasIndex("ProjekatID");

                    b.ToTable("ProjekatMaterijali");
                });

            modelBuilder.Entity("Model.Projekti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ID");

                    b.ToTable("Projekti");
                });

            modelBuilder.Entity("Model.Radnici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Dnevnica")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Iskustvo")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ProjekatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjekatID");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Model.Masine", b =>
                {
                    b.HasOne("Model.Projekti", "Projekat")
                        .WithMany("Masine")
                        .HasForeignKey("ProjekatID");

                    b.Navigation("Projekat");
                });

            modelBuilder.Entity("Model.ProjekatInzenjer", b =>
                {
                    b.HasOne("Model.Inzenjeri", "Inzenjer")
                        .WithMany("ProjekatInzenjer")
                        .HasForeignKey("InzenjerID");

                    b.HasOne("Model.Projekti", "Projekat")
                        .WithMany("ProjekatInzenjer")
                        .HasForeignKey("ProjekatID");

                    b.Navigation("Inzenjer");

                    b.Navigation("Projekat");
                });

            modelBuilder.Entity("Model.ProjekatMaterijal", b =>
                {
                    b.HasOne("Model.Materijal", "Materijal")
                        .WithMany("ProjekatMaterijal")
                        .HasForeignKey("MaterijalID");

                    b.HasOne("Model.Projekti", "Projekat")
                        .WithMany("ProjekatMaterijal")
                        .HasForeignKey("ProjekatID");

                    b.Navigation("Materijal");

                    b.Navigation("Projekat");
                });

            modelBuilder.Entity("Model.Radnici", b =>
                {
                    b.HasOne("Model.Projekti", "Projekat")
                        .WithMany("Radnici")
                        .HasForeignKey("ProjekatID");

                    b.Navigation("Projekat");
                });

            modelBuilder.Entity("Model.Inzenjeri", b =>
                {
                    b.Navigation("ProjekatInzenjer");
                });

            modelBuilder.Entity("Model.Materijal", b =>
                {
                    b.Navigation("ProjekatMaterijal");
                });

            modelBuilder.Entity("Model.Projekti", b =>
                {
                    b.Navigation("Masine");

                    b.Navigation("ProjekatInzenjer");

                    b.Navigation("ProjekatMaterijal");

                    b.Navigation("Radnici");
                });
#pragma warning restore 612, 618
        }
    }
}
